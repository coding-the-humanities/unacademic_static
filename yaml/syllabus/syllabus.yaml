title: Syllabus
year: 2014/15

staff:
- Dr. J.H. Hoogstad
- Dr. Marijn Koolen
- Reika Chavers
- Angeliki Chalkia
- Taeke Keuning
- Roel van Bakkum
- Erik van Zummeren
- Robert-Jan Korteschiel

course_content: |
  Students and scholars in the humanities generally rely on prefabricated
  tools to guide and instruct their research and are reluctant to engage with
  computers and technology through coding. This remains a major distinction
  between the humanities and the sciences. The sciences design, create and
  maintain their own relevant digital research environments and tools, while
  the humanities make do with prefabricated, and often inappropriate, tools.

  At the moment, there are no broadly available academic programming courses
  aimed at humanities scholars. However, coding skills are needed more now than
  ever, and even more so in the future:

  1. They help students and researchers to understand the various
     technologically mediated objects that they are studying.
  2. Developing custom tools, rather than using ready-made ones, can improve the
     actual practice of humanities research as well as (the quantity and quality)
     of its output.
  3. There is an ever-growing demand in the public and private sector for
     academics who can read and write code.

  After completion of the module you will be able to:

  1. Apply knowledge of basic programming building blocks that carry over to
     almost all programming languages;
  2. Demonstrate knowledge of web-based, client and server side services;
  3. Display insight in technological aspects of humanities research;
  4. Apply skills in analysing humanities questions and material from a coding perspective;
  5. Reflect on experience in project-based collaborative humanities research.

time_requirement: |
     This is a online-first course. This means that, including the contact hours,
     students are required to work on this course 21 hours a week. In order to
     make this possible, a collaborative online platform is used to offer the
     teaching.

     During the course, the students will work on a group project. These
     self-organized groups should meet regularly throughout the course.
     Feedback on the progress, by the instructors, teaching assistants and
     peers, is offered during the plenary sessions and on the platform.

schedule:
  - location:       UvA (OMHP EK.01)
    date:           28 October
    time:           13:00 - 17:00
  - location:       LUSTlab
    date:           4 November
    time:           13.00 - 16:00
  - location:       UvA (OMHP EK.01)
    date:           11 November
    time:           13:00 - 17:00
  - location:       Sandberg (TBA)
    date:           18 November
    time:           13:00 - 16:00
  - location:       UvA (OMHP EK.01)
    date:           25 November
    time:           13:00 - 17:00
  - location:       UvA (TBA)
    date:           2 December
    time:           10:00 - 13:00
  - location:       Sandberg (TBA)
    date:           9 December
    time:           13:00 - 16:00

assessment:
  description: |
    Build an interface that visualizes group research
  review:
    - weekly assignments
    - Final presentation of the group project
  completion: |
     You pass if you completed all the weekly assignments and achieve a grade
     of at least 5.5 on the final assessment.
  criteria:
    - originality of the idea and research question;
    - implementation of that idea and question in code;
    - identification of the goals of the project, and its effectiveness
      in addressing these goals;
    - degree to which it does, or does not, go beyond the stated goals to
      challenge
      current practice.
    - quality of the presentation
  deadlines:
    - Weekly Assignment (week 1 â€“ 6)
    - Final Presentation (week 7)

requirements: |
    The presentation should be a reflection of everything you
    learned by doing the Unacademic objectives. This means in the
    final project that you present, we expect that you have used:
    - Polymer
    - Web Components
    - JavaScript
    - CSS
    - The Rijksmuseum API
    - The city of Amsterdam
    - A user case study

    The presentation approaches the project from two angles:
      Design and vision (Sandberg Students)
      Technical implementation (CtH Students)
      The aim for this project for the CtH Students is explicitly not a completely working product, 
      but a prototype that illustrates how (a feature of) such an application should / could be implemented in code.
